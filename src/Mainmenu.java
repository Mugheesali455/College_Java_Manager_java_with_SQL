import java.beans.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
// import java.sql.Statement;
import javax.naming.spi.DirStateFactory.Result;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import com.mysql.cj.jdbc.Driver;
import com.mysql.cj.jdbc.result.ResultSetMetaData;

/**
 *
 * @author mughees
 */
public class Mainmenu extends javax.swing.JFrame {

    public Mainmenu() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BOTTOMPANEL = new javax.swing.JPanel();
        Namelabel = new javax.swing.JLabel();
        Nameinputfeild = new javax.swing.JTextField();
        Namelabel1 = new javax.swing.JLabel();
        fathernameinputfeild = new javax.swing.JTextField();
        cnicinputfeild = new javax.swing.JTextField();
        cniclablel = new javax.swing.JLabel();
        contactlabel = new javax.swing.JLabel();
        contactinputfield = new javax.swing.JTextField();
        departmentlabel = new javax.swing.JLabel();
        departmentinputfeild = new javax.swing.JTextField();
        addresslabe = new javax.swing.JLabel();
        addressinputfeild = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        registerbutton = new javax.swing.JButton();
        seerecordbutton = new javax.swing.JButton();
        updatebutton = new javax.swing.JButton();
        deletebutoon1 = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        TOPPANEL = new javax.swing.JPanel();
        Heading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        BOTTOMPANEL.setBackground(new java.awt.Color(37, 43, 72));
        BOTTOMPANEL.setForeground(new java.awt.Color(255, 255, 255));

        Namelabel.setFont(new java.awt.Font("Norasi", 0, 22)); // NOI18N
        Namelabel.setForeground(new java.awt.Color(255, 255, 255));
        Namelabel.setText("Name");

        Nameinputfeild.setBackground(new java.awt.Color(68, 80, 105));
        Nameinputfeild.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        Nameinputfeild.setForeground(new java.awt.Color(255, 255, 255));
        Nameinputfeild.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        Nameinputfeild.setCaretColor(new java.awt.Color(255, 255, 255));

        Namelabel1.setFont(new java.awt.Font("Norasi", 0, 22)); // NOI18N
        Namelabel1.setForeground(new java.awt.Color(255, 255, 255));
        Namelabel1.setText("Father Name");

        fathernameinputfeild.setBackground(new java.awt.Color(68, 80, 105));
        fathernameinputfeild.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        fathernameinputfeild.setForeground(new java.awt.Color(255, 255, 255));
        fathernameinputfeild.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        fathernameinputfeild.setCaretColor(new java.awt.Color(255, 255, 255));

        cnicinputfeild.setBackground(new java.awt.Color(68, 80, 105));
        cnicinputfeild.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        cnicinputfeild.setForeground(new java.awt.Color(255, 255, 255));
        cnicinputfeild.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        cnicinputfeild.setCaretColor(new java.awt.Color(255, 255, 255));

        cniclablel.setFont(new java.awt.Font("Norasi", 0, 22)); // NOI18N
        cniclablel.setForeground(new java.awt.Color(255, 255, 255));
        cniclablel.setText("CNIC Number");

        contactlabel.setFont(new java.awt.Font("Norasi", 0, 22)); // NOI18N
        contactlabel.setForeground(new java.awt.Color(255, 255, 255));
        contactlabel.setText("Contact Number");

        contactinputfield.setBackground(new java.awt.Color(68, 80, 105));
        contactinputfield.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        contactinputfield.setForeground(new java.awt.Color(255, 255, 255));
        contactinputfield.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        contactinputfield.setCaretColor(new java.awt.Color(255, 255, 255));

        departmentlabel.setFont(new java.awt.Font("Norasi", 0, 22)); // NOI18N
        departmentlabel.setForeground(new java.awt.Color(255, 255, 255));
        departmentlabel.setText("Department Name");

        departmentinputfeild.setBackground(new java.awt.Color(68, 80, 105));
        departmentinputfeild.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        departmentinputfeild.setForeground(new java.awt.Color(255, 255, 255));
        departmentinputfeild.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        departmentinputfeild.setCaretColor(new java.awt.Color(255, 255, 255));

        addresslabe.setFont(new java.awt.Font("Norasi", 0, 22)); // NOI18N
        addresslabe.setForeground(new java.awt.Color(255, 255, 255));
        addresslabe.setText("Address");

        addressinputfeild.setBackground(new java.awt.Color(68, 80, 105));
        addressinputfeild.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        addressinputfeild.setForeground(new java.awt.Color(255, 255, 255));
        addressinputfeild.setBorder(javax.swing.BorderFactory.createEmptyBorder(6, 6, 6, 6));
        addressinputfeild.setCaretColor(new java.awt.Color(255, 255, 255));

        jTable1.setBackground(new java.awt.Color(68, 80, 105));
        jTable1.setFont(new java.awt.Font("Norasi", 0, 18)); // NOI18N
        jTable1.setForeground(new java.awt.Color(255, 255, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Father Name", "CNIC Number", "Address", "Department", "Contact Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        registerbutton.setBackground(new java.awt.Color(91, 154, 139));
        registerbutton.setFont(new java.awt.Font("Norasi", 0, 16)); // NOI18N
        registerbutton.setForeground(new java.awt.Color(255, 255, 255));
        registerbutton.setText("Register");
        registerbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerbuttonActionPerformed(evt);
            }
        });

        seerecordbutton.setBackground(new java.awt.Color(91, 154, 139));
        seerecordbutton.setFont(new java.awt.Font("Norasi", 0, 16)); // NOI18N
        seerecordbutton.setForeground(new java.awt.Color(255, 255, 255));
        seerecordbutton.setText("See record");
        seerecordbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seerecordbuttonActionPerformed(evt);
            }
        });

        updatebutton.setBackground(new java.awt.Color(91, 154, 139));
        updatebutton.setFont(new java.awt.Font("Norasi", 0, 16)); // NOI18N
        updatebutton.setForeground(new java.awt.Color(255, 255, 255));
        updatebutton.setText("Update");
        updatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebuttonActionPerformed(evt);
            }
        });

        deletebutoon1.setBackground(new java.awt.Color(91, 154, 139));
        deletebutoon1.setFont(new java.awt.Font("Norasi", 0, 16)); // NOI18N
        deletebutoon1.setForeground(new java.awt.Color(255, 255, 255));
        deletebutoon1.setText("Delete");
        deletebutoon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebutoon1ActionPerformed(evt);
            }
        });

        clear.setBackground(new java.awt.Color(91, 154, 139));
        clear.setFont(new java.awt.Font("Norasi", 0, 16)); // NOI18N
        clear.setForeground(new java.awt.Color(255, 255, 255));
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BOTTOMPANELLayout = new javax.swing.GroupLayout(BOTTOMPANEL);
        BOTTOMPANEL.setLayout(BOTTOMPANELLayout);
        BOTTOMPANELLayout.setHorizontalGroup(
            BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BOTTOMPANELLayout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addGroup(BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BOTTOMPANELLayout.createSequentialGroup()
                        .addComponent(clear)
                        .addGap(18, 18, 18)
                        .addComponent(registerbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seerecordbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(updatebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(deletebutoon1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(BOTTOMPANELLayout.createSequentialGroup()
                        .addGroup(BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nameinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Namelabel)
                            .addComponent(Namelabel1)
                            .addComponent(fathernameinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactinputfield, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactlabel))
                        .addGap(47, 47, 47)
                        .addGroup(BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(departmentlabel)
                            .addComponent(departmentinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addressinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addresslabe)
                            .addComponent(cniclablel)
                            .addComponent(cnicinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BOTTOMPANELLayout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 513, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        BOTTOMPANELLayout.setVerticalGroup(
            BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BOTTOMPANELLayout.createSequentialGroup()
                .addGroup(BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BOTTOMPANELLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(Namelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Nameinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Namelabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fathernameinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(contactlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(contactinputfield, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BOTTOMPANELLayout.createSequentialGroup()
                        .addGroup(BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(BOTTOMPANELLayout.createSequentialGroup()
                                .addGroup(BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(BOTTOMPANELLayout.createSequentialGroup()
                                        .addComponent(addresslabe)
                                        .addGap(47, 47, 47))
                                    .addComponent(addressinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(88, 88, 88))
                            .addGroup(BOTTOMPANELLayout.createSequentialGroup()
                                .addComponent(cniclablel)
                                .addGap(3, 3, 3)
                                .addComponent(cnicinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(departmentlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(departmentinputfeild, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(BOTTOMPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updatebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletebutoon1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seerecordbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        TOPPANEL.setBackground(new java.awt.Color(68, 80, 105));

        Heading.setFont(new java.awt.Font("Norasi", 1, 24)); // NOI18N
        Heading.setForeground(new java.awt.Color(255, 255, 255));
        Heading.setText("COLLEGE MANAGER");

        javax.swing.GroupLayout TOPPANELLayout = new javax.swing.GroupLayout(TOPPANEL);
        TOPPANEL.setLayout(TOPPANELLayout);
        TOPPANELLayout.setHorizontalGroup(
            TOPPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TOPPANELLayout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(Heading)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TOPPANELLayout.setVerticalGroup(
            TOPPANELLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TOPPANELLayout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(Heading)
                .addGap(14, 14, 14))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TOPPANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BOTTOMPANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(TOPPANEL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(BOTTOMPANEL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        Nameinputfeild.setText("");
        fathernameinputfeild.setText("");
        cnicinputfeild.setText("");
        addressinputfeild.setText("");
        contactinputfield.setText("");
        departmentinputfeild.setText("");
        Nameinputfeild.requestFocus();
    }//GEN-LAST:event_clearActionPerformed

    private void seerecordbuttonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_seerecordbuttonActionPerformed
        show_table(); // TODO add your handling code here:
    }// GEN-LAST:event_seerecordbuttonActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jTable1MouseClicked
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectrow = jTable1.getSelectedRow();
        if (selectrow != -1) {
            Nameinputfeild.setText(model.getValueAt(selectrow, 1).toString());
            fathernameinputfeild.setText(model.getValueAt(selectrow, 2).toString());
            cnicinputfeild.setText(model.getValueAt(selectrow, 3).toString());
            addressinputfeild.setText(model.getValueAt(selectrow, 4).toString());
            departmentinputfeild.setText(model.getValueAt(selectrow, 5).toString());
            contactinputfield.setText(model.getValueAt(selectrow, 6).toString());
        } else {

        }

    }// GEN-LAST:event_jTable1MouseClicked

    private void updatebuttonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_updatebuttonActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectrow = jTable1.getSelectedRow();
        int StudentID = Integer.parseInt(model.getValueAt(selectrow, 0).toString());
        String name = Nameinputfeild.getText();
        String fathername = fathernameinputfeild.getText();
        String cnicnumber = cnicinputfeild.getText();
        String address = addressinputfeild.getText();
        String contact = contactinputfield.getText();
        String departmentname = departmentinputfeild.getText();

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Name feild cannot be empty");
        } else if (fathername.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Father Name feild cannot be empty");
        } else if (cnicnumber.isEmpty()) {
            JOptionPane.showMessageDialog(null, "CNIC Number cannot be empty");
        } else if (address.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Address feild cannot be empty");
        } else if (contact.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Contact feild cannot be empty");
        } else if (departmentname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Department Name cannot be empty");
        } else {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/Passwordinfodatabase",
                        "root", "Password123#@!!");// Replace your database passcode with this password123#@!@ and connectioin path
                String updateQuery = "UPDATE Students SET Name = ?, FatherName = ?, CNICNumber = ?, Address = ?, Department = ?, Contact = ? WHERE ID = ?";
                PreparedStatement preparedStatement = connection.prepareStatement(updateQuery);
                preparedStatement.setString(1, name);
                preparedStatement.setString(2, fathername);
                preparedStatement.setString(3, cnicnumber);
                preparedStatement.setString(4, address);
                preparedStatement.setString(5, departmentname);
                preparedStatement.setString(6, contact);
                preparedStatement.setInt(7, StudentID); // Set the value of the ID parameter

                int rowsAffected = preparedStatement.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Information was updated successfully");
                } else {
                    JOptionPane.showMessageDialog(null, "Registration failed Unknown Error");
                }
                show_table();
                Nameinputfeild.setText("");
                fathernameinputfeild.setText("");
                cnicinputfeild.setText("");
                addressinputfeild.setText("");
                contactinputfield.setText("");
                departmentinputfeild.setText("");
                Nameinputfeild.requestFocus();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,
                "An unknow error has occured there Might be a dublicate entry please check");
            }
        }

    }// GEN-LAST:event_updatebuttonActionPerformed

    private void deletebutoon1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_deletebutoon1ActionPerformed
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectrow = jTable1.getSelectedRow();
        int ID = Integer.parseInt(model.getValueAt(selectrow, 0).toString());
        int dialogconfirmation = JOptionPane.showConfirmDialog(null, "Do You want to delete the specific record",
                "warning", JOptionPane.YES_NO_OPTION);
        if (dialogconfirmation == JOptionPane.YES_OPTION) {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/Passwordinfodatabase",
                        "root", "Password123#@!!");// Replace your database passcode with this password123#@!@ and connectioin path
                String deleteQuery = "DELETE FROM Students WHERE ID = ?";
                PreparedStatement preparedStatement = connection.prepareStatement(deleteQuery);
                preparedStatement.setInt(1, ID); // Set the ID parameter
                int rowsAffected = preparedStatement.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Record deleted successfully");
                    model.removeRow(selectrow); // Remove the row from the table
                } else {
                    JOptionPane.showMessageDialog(null, "No records were deleted");
                }
                preparedStatement.close();
                connection.close();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "An unknown error has occurred while deleting the record.");
            }
        }
    }

    private void show_table() {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver"); // Use "com.mysql.cj.jdbc.Driver" for MySQL Connector/J
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/Passwordinfodatabase",
                    "root", "Password123#@!!");// Replace your database passcode with this password123#@!@ and connectioin path
            String selectquery = "select * from Students";
            java.sql.Statement preparedStatement = connection.createStatement();
            ResultSet resultSet = preparedStatement.executeQuery(selectquery);
            java.sql.ResultSetMetaData resultSetMetaData = resultSet.getMetaData();
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0);
            int columnCount = model.getColumnCount();
            String[] columnname = new String[columnCount];
            for (int i = 0; i < columnCount; i++) {
                columnname[i] = resultSetMetaData.getColumnName(i + 1);
                model.setColumnIdentifiers(columnname);
            }
            String uname, ucontact, ufathername, uaddress, udepartment, ucnicnumber, ID;

            while (resultSet.next()) {
                ID = resultSet.getString(resultSet.getMetaData().getColumnLabel(1)); // Assuming ID is in the first
                                                                                     // column
                uname = resultSet.getString(resultSet.getMetaData().getColumnLabel(2)); // Assuming ID is in the first
                                                                                        // column
                ufathername = resultSet.getString(resultSet.getMetaData().getColumnLabel(3)); // Assuming FatherName is
                                                                                              // in the second column
                ucnicnumber = resultSet.getString(resultSet.getMetaData().getColumnLabel(4)); // Assuming CNICNumber is
                                                                                              // in the third column
                uaddress = resultSet.getString(resultSet.getMetaData().getColumnLabel(5)); // Assuming Address is in the
                                                                                           // fourth column
                udepartment = resultSet.getString(resultSet.getMetaData().getColumnLabel(6)); // Assuming Department is
                                                                                              // in the fifth column
                ucontact = resultSet.getString(resultSet.getMetaData().getColumnLabel(7)); // Assuming contact is in the
                                                                                           // sixth column
                String[] row = { ID, uname, ufathername, ucnicnumber, uaddress, udepartment, ucontact };
                model.addRow(row);
            }
            preparedStatement.close();
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    private void registerbuttonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_registerbuttonActionPerformed
        String ID;
        String name = Nameinputfeild.getText();
        String fathername = fathernameinputfeild.getText();
        String cnicnumber = cnicinputfeild.getText();
        String address = addressinputfeild.getText();
        String contact = contactinputfield.getText();
        String departmentname = departmentinputfeild.getText();

        if (name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Name feild cannot be empty");
        } else if (fathername.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Father Name feild cannot be empty");
        } else if (cnicnumber.isEmpty()) {
            JOptionPane.showMessageDialog(null, "CNIC Number cannot be empty");
        } else if (address.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Address feild cannot be empty");
        } else if (contact.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Contact feild cannot be empty");
        } else if (departmentname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Department Name cannot be empty");
        } else {
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/Passwordinfodatabase",
                        "root", "Password123#@!!");// Replace your database passcode with this password123#@!@ and connectioin path
                String insertQuery = "INSERT INTO Students (Name,FatherName,CNICNumber,Address,Department,Contact) VALUES(?,?,?,?,?,?)";
                PreparedStatement preparedStatement = connection.prepareStatement(insertQuery);
                preparedStatement.setString(1, name);
                preparedStatement.setString(2, fathername);
                preparedStatement.setString(3, cnicnumber);
                preparedStatement.setString(4, address);
                preparedStatement.setString(5, departmentname);
                preparedStatement.setString(6, contact);
                int rowsAffected = preparedStatement.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Registration was successfull");
                } else {
                    JOptionPane.showMessageDialog(null, "Registration failed Unknown Error");
                }
                show_table();
                Nameinputfeild.setText("");
                fathernameinputfeild.setText("");
                cnicinputfeild.setText("");
                addressinputfeild.setText("");
                contactinputfield.setText("");
                departmentinputfeild.setText("");
                Nameinputfeild.requestFocus();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null,
                        "An unknow error has occured there Might be a dublicate entry please check");
            }
        }

    }// GEN-LAST:event_registerbuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Mainmenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Mainmenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel BOTTOMPANEL;
    private javax.swing.JLabel Heading;
    private javax.swing.JTextField Nameinputfeild;
    private javax.swing.JLabel Namelabel;
    private javax.swing.JLabel Namelabel1;
    private javax.swing.JPanel TOPPANEL;
    private javax.swing.JTextField addressinputfeild;
    private javax.swing.JLabel addresslabe;
    private javax.swing.JButton clear;
    private javax.swing.JTextField cnicinputfeild;
    private javax.swing.JLabel cniclablel;
    private javax.swing.JTextField contactinputfield;
    private javax.swing.JLabel contactlabel;
    private javax.swing.JButton deletebutoon1;
    private javax.swing.JTextField departmentinputfeild;
    private javax.swing.JLabel departmentlabel;
    private javax.swing.JTextField fathernameinputfeild;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton registerbutton;
    private javax.swing.JButton seerecordbutton;
    private javax.swing.JButton updatebutton;
    // End of variables declaration//GEN-END:variables
}
